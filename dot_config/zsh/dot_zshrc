# Created by newuser for 5.9
HISTSIZE=10000000
SAVEHIST=10000000
setopt autocd
setopt interactive_comments
stty stop undef
autoload -U colors && colors	 
autoload -U compinit && compinit -u
zstyle ':completion:*' menu select
# Auto complete with case insenstivity
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.
source ~/.config/zsh/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
source ~/.config/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
# vi mode
bindkey -v
export KEYTIMEOUT=1

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char
function fh() {
  local cmd=$(history | tac | fzf --reverse | sed 's/ *[0-9]* *//')
  if [ -n "$cmd" ]; then
    echo "$cmd"
    eval "$cmd"
  fi
}


function transfer() {
  # check arguments
  if [[ $# -eq 0 ]]; then
  cat <<EOF
Error: no arguments specified.
Usage: transfer [file/folder] [options]
Examples:
  transfer /tmp/test.md
  transfer /tmp/test.md -ca
  cat /tmp/test.md | transfer test.md
  cat /tmp/test.md | transfer test.md -ca
Options:
  -ca  Encrypt file with symmetric cipher and create ASCII armored output
EOF
  return 1
  fi

  if (( ! $+commands[curl] )); then
    echo "Error: curl is not installed"
    return 1
  fi

  local tmpfile tarfile item basename

  # get temporarily filename, output is written to this file show progress can be showed
  tmpfile=$(mktemp -t transferXXX)

  # upload stdin or file
  item="$1"

  # crypt file with symmetric cipher and create ASCII armored output
  local crypt=0
  if [[ "$2" = -ca ]]; then
    crypt=1
    if (( ! $+commands[gpg] )); then
      echo "Error: gpg is not installed"
      return 1
    fi
  fi

  if ! tty -s; then
    # transfer from pipe
    if (( crypt )); then
      gpg -aco - | curl -X PUT --progress-bar -T - "https://transfer.sh/$item" >> $tmpfile
    else
      curl --progress-bar --upload-file - "https://transfer.sh/$item" >> $tmpfile
    fi
  else
    basename=$(basename "$item" | sed -e 's/[^a-zA-Z0-9._-]/-/g')

    if [[ ! -e $item ]]; then
      echo "File $item doesn't exist."
      return 1
    fi

    if [[ -d $item ]]; then
      # tar directory and transfer
      tarfile=$(mktemp -t transferXXX.tar.gz)
      cd $(dirname $item) || {
        echo "Error: Could not change to directory $(dirname $item)"
        return 1
      }

      tar -czf $tarfile $(basename $item)
      if (( crypt )); then
        gpg -cao - "$tarfile" | curl --progress-bar -T "-" "https://transfer.sh/$basename.tar.gz.gpg" >> $tmpfile
      else
        curl --progress-bar --upload-file "$tarfile" "https://transfer.sh/$basename.tar.gz" >> $tmpfile
      fi
      rm -f $tarfile
    else
      # transfer file
      if (( crypt )); then
        gpg -cao - "$item" | curl --progress-bar -T "-" "https://transfer.sh/$basename.gpg" >> $tmpfile
      else
        curl --progress-bar --upload-file "$item" "https://transfer.sh/$basename" >> $tmpfile
      fi
    fi
  fi

  # cat output link
  cat $tmpfile
  # add newline
  echo

  # cleanup
  rm -f $tmpfile
}
zle -N fh
bindkey '^R' fh

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
export PROMPT_COMMAND="history -a; history -n"

eval "$(starship init zsh)"
